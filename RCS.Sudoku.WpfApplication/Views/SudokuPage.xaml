<Page
    x:Class="RCS.Sudoku.WpfApplication.Views.SudokuPage"
    DataContext="{Binding SudokuViewModel, Source={StaticResource Locator}}"
    Style="{DynamicResource MahApps.Styles.Page}"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:properties="clr-namespace:RCS.Sudoku.Common.Properties;assembly=RCS.Sudoku.Common"
    xmlns:converters="clr-namespace:RCS.Sudoku.WpfApplication.Converters"
    mc:Ignorable="d"
    d:DesignHeight="400" d:DesignWidth="400"
    >

    <Page.Resources>
        <ResourceDictionary>
            <converters:PlusPlus x:Key="PlusPlus"/>

            <Style TargetType="{x:Type DataGridColumnHeader}">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
            </Style>

            <!--Note this mimics the standard ColumnHeader style and gets the proper content.-->
            <Style TargetType="{x:Type DataGridRowHeader}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                            <Border BorderBrush="LightGray" BorderThickness="0,0,1,1">
                                <TextBlock Text="{Binding Path=AlternationIndex, RelativeSource={RelativeSource AncestorType=DataGridRow}, Converter={StaticResource PlusPlus}}"  
                                           Width="26" VerticalAlignment="Center" TextAlignment="Center">
                                    <TextBlock.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Color="White" Offset="0.1"/>
                                            <GradientStop Color="#FFF3F3F3" Offset="1"/>
                                        </LinearGradientBrush>
                                    </TextBlock.Background>
                                </TextBlock>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--Could not simply assign this to DataGrid.CellStyle and have it as base within the columns.-->
            <Style TargetType="{x:Type DataGridCell}">
                <Setter Property="TextBlock.TextAlignment" Value="Center" />
            </Style>
        </ResourceDictionary>
    </Page.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid Grid.Row="0" Name="Controls" Margin="10">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Button Grid.Row="0" Grid.Column="0" Content="{x:Static properties:Resources.FileReadText}" Command="{Binding ReadFileCommand}" Style="{StaticResource SudokuButtonStyle}" />
            <Label Grid.Row="0" Grid.Column="1" Content="{x:Static properties:Resources.FileMessageLabel}" Style="{StaticResource SudokuLabelStyle}"/>
            <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding FileMessage, Mode=OneWay}" Style="{StaticResource SudokuTextValueStyle}" />

            <Button Grid.Row="1" Grid.Column="0" Content="{x:Static properties:Resources.SolveText}" Command="{Binding SolveCommand}" Style="{StaticResource SudokuButtonStyle}" />
            <Label Grid.Row="1" Grid.Column="1" Content="{x:Static properties:Resources.SolveMessageLabel}" Style="{StaticResource SudokuLabelStyle}"/>
            <TextBlock Grid.Row="1" Grid.Column="2" Text="{Binding SolveMessage, Mode=OneWay}" Style="{StaticResource SudokuTextValueStyle}" />
        </Grid>

        <!--Note content of the RowHeaders is based on https://stackoverflow.com/questions/4661998/simple-way-to-display-row-numbers-on-wpf-datagrid-->
        <!--TODO It would be desirable to display boxes too. Note one can select arbitrary rows.-->
        <DataGrid
            Grid.Row="1"
            Name="SudokuGrid"
            ItemsSource="{Binding Source, Mode=OneWay}"
            AutoGenerateColumns="False"
            CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False" CanUserSortColumns="False"
            Margin="10"
            HorizontalAlignment="Center" VerticalAlignment="Top" 
            BorderThickness="1"
            GridLinesVisibility="All"
            HorizontalGridLinesBrush="LightGray"
            VerticalGridLinesBrush="LightGray"
            HeadersVisibility="All"
            FontSize="{StaticResource MediumFontSize}"
            ColumnWidth="22"
            RowHeight="22"
            AlternationCount="{ Binding Source.Count}"
            SelectionUnit="Cell"
            >

            <!--Manually defined columns to enable colouring.-->
            <DataGrid.Columns>
                <DataGridTextColumn Header="A" Binding="{Binding a}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Style.Triggers>
                                <!--Note DataContext is on row level.-->
                                <DataTrigger Binding="{Binding Path=a.Original}" Value="true">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="LightGreen"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="B" Binding="{Binding b}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Style.Triggers>
                                <!--Note DataContext is on row level.-->
                                <DataTrigger Binding="{Binding Path=b.Original}" Value="true">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="LightGreen"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="C" Binding="{Binding c}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Style.Triggers>
                                <!--Note DataContext is on row level.-->
                                <DataTrigger Binding="{Binding Path=c.Original}" Value="true">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="LightGreen"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="D" Binding="{Binding d}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Style.Triggers>
                                <!--Note DataContext is on row level.-->
                                <DataTrigger Binding="{Binding Path=d.Original}" Value="true">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="LightGreen"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="E" Binding="{Binding e}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Style.Triggers>
                                <!--Note DataContext is on row level.-->
                                <DataTrigger Binding="{Binding Path=e.Original}" Value="true">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="LightGreen"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="F" Binding="{Binding f}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Style.Triggers>
                                <!--Note DataContext is on row level.-->
                                <DataTrigger Binding="{Binding Path=f.Original}" Value="true">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="LightGreen"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="G" Binding="{Binding g}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Style.Triggers>
                                <!--Note DataContext is on row level.-->
                                <DataTrigger Binding="{Binding Path=g.Original}" Value="true">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="LightGreen"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>

                </DataGridTextColumn>
                <DataGridTextColumn Header="H" Binding="{Binding h}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Style.Triggers>
                                <!--Note DataContext is on row level.-->
                                <DataTrigger Binding="{Binding Path=h.Original}" Value="true">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="LightGreen"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>

                <DataGridTextColumn Header="I" Binding="{Binding i}">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                            <Style.Triggers>
                                <!--Note DataContext is on row level.-->
                                <DataTrigger Binding="{Binding Path=i.Original}" Value="true">
                                    <Setter Property="Background">
                                        <Setter.Value>
                                            <SolidColorBrush Color="LightGreen"/>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Page>